/*! @ryanmorr/reduce v0.1.2 | https://github.com/ryanmorr/reduce */
"use strict";function t(t){return Array.isArray(t)?t:function(t){return"function"==typeof t[Symbol.iterator]}(t)||function(t){const e=null!=t&&t.length;return"number"==typeof e&&e>=0&&e%1==0}(t)?Array.from(t):function(t){if(!t||"object"!=typeof t)return!1;const e=Object.getPrototypeOf(t);return null===e||e===Object.getPrototypeOf({})}(t)?Object.entries(t):void 0}exports.reduce=function(e,r,n){const o=t(e);for(let t=0,u=o.length;t<u;t++)r=n(r,o[t],t,e);return r},exports.reduceRight=function(e,r,n){const o=t(e);for(let t=o.length-1;t>=0;--t)r=n(r,o[t],t,e);return r};
